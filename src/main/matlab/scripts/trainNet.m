function trainNet(netName,imagesPath,numTrainFiles,initLayers,epochsNum,gaussianNoiseLevel)
    imds = imageDatastore(imagesPath, ...
        'IncludeSubfolders',false,...
        'LabelSource','foldernames');
    [imdsTrain,imdsValidation] = splitEachLabel(imds,numTrainFiles,'randomize');
    
    trainFilesSize = [50 50];
    dnds = denoisingImageDatastore(imdsTrain,...
        'PatchesPerImage',60,...
        'PatchSize',trainFilesSize,...
        'ChannelFormat','grayscale',...);
        'GaussianNoiseLevel',gaussianNoiseLevel);
    %     'PatchSize',50,...
    dnds1 = denoisingImageDatastore(imdsValidation,...
        'PatchesPerImage',60,...
        'PatchSize',trainFilesSize,...
        'ChannelFormat','grayscale');
    
    options = trainingOptions('sgdm', ...
        'InitialLearnRate',1e-4, ...    % начальная скорость обучения
        'MaxEpochs',epochsNum, ...      % количество эпох
        'Shuffle','every-epoch', ...    % "перетасовка" данных
        'ValidationFrequency',2, ...    % число итераций между оценками метрик проверки
        'ValidationData',dnds1, ...     % проверочное множество
        'Momentum',0.9,...              % влияние предыдущей итерации (от 0 до 1)
        'Verbose',false, ...            % отображение информации о ходе обучения (0 или 1)
        'Plots','training-progress',... % отображение графика о ходе обучения
        'ExecutionEnvironment','cpu'...     
    );
    net = trainNetwork(dnds,initLayers,options);
    save(netName,'net','initLayers');
end